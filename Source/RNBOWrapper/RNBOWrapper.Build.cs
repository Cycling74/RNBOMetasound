// Copyright Epic Games, Inc. All Rights Reserved.

using UnrealBuildTool;
using System.IO;

public class RNBOWrapper : ModuleRules
{
	public RNBOWrapper(ReadOnlyTargetRules Target) : base(Target)
	{
		PCHUsage = ModuleRules.PCHUsageMode.UseExplicitOrSharedPCHs;

		var exportDir = Path.Combine(PluginDirectory, "Exports");
		var rnboDir = Path.Combine(exportDir, "FreqCycle", "rnbo");

		using (StreamWriter writer = new StreamWriter(Path.Combine(PluginDirectory, "Source", "RNBOWrapper", "Private", "RNBOWrapperGenerated.cpp")))
		{
			writer.WriteLine("//automatically generated by RNBOWrapper");
			writer.WriteLine("#include \"RNBO.cpp\" ");

			//TODO detect exports
			writer.WriteLine("#include \"FreqCycle/FreqCycle.cpp\" ");
			PrivateIncludePaths.Add(Path.Combine(exportDir, "FreqCycle"));
		}

		
		PublicIncludePaths.AddRange(
			new string[] {
				// ... add public include paths required here ...
			}
			);
				

		PrivateIncludePaths.AddRange(
			new string[]
			{
				exportDir,
				Path.Combine(rnboDir),
				Path.Combine(rnboDir, "common"),
				Path.Combine(rnboDir, "src"),
				Path.Combine(rnboDir, "src", "3rdparty"),
			}
			);
		

		PublicDependencyModuleNames.AddRange(
			new string[]
			{
				"Core",
				"MetasoundFrontend",
				"MetasoundGraphCore",
				"MetasoundStandardNodes",
				// ... add other public dependencies that you statically link with here ...
			}
			);
			
		
		PrivateDependencyModuleNames.AddRange(
			new string[]
			{
				"CoreUObject",
				"Engine",
				"SignalProcessing",
				//Path.Combine(rnboDir, "RNBO.cpp"),
				// ... add private dependencies that you statically link with here ...	
			}
			);
		
		
		DynamicallyLoadedModuleNames.AddRange(
			new string[]
			{
				// ... add any modules that your module loads dynamically here ...
			}
			);

		PrivateDefinitions.Add("RNBO_NO_PATCHERFACTORY=1");
	}
}
